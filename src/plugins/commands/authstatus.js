const fs = require("fs");
const path = require("path");
const { validateAuthFiles } = require("../../utils/helpers");

module.exports.config = {
    name: 'authstatus',
    version: '1.0.0',
    role: 2,
    author: 'Augment Agent',
    description: 'Ki·ªÉm tra tr·∫°ng th√°i file authentication',
    category: 'H·ªá th·ªëng',
    usage: 'authstatus',
    cooldowns: 3,
    dependencies: {}
};

module.exports.run = async ({ event, api }) => {
    const { threadId, type } = event;

    try {
        const authDir = path.join(__dirname, "../../../storage/auth");
        const accountPath = path.join(authDir, global.config.account_file);
        const cookiePath = path.join(authDir, "cookie.json");
        const qrPath = path.join(__dirname, `../../../${global.config.qrcode_path}`);

        // Ki·ªÉm tra validation
        const validation = validateAuthFiles();
        
        let msg = "üîç **TR·∫†NG TH√ÅI AUTHENTICATION**\n\n";
        
        // Tr·∫°ng th√°i t·ªïng quan
        if (validation.valid) {
            msg += "‚úÖ **Tr·∫°ng th√°i**: H·ª£p l·ªá\n";
        } else {
            msg += "‚ùå **Tr·∫°ng th√°i**: Kh√¥ng h·ª£p l·ªá\n";
            msg += `üìù **L√Ω do**: ${validation.reason}\n`;
        }
        
        msg += "\nüìÅ **CHI TI·∫æT FILE**:\n";
        
        // Ki·ªÉm tra file account
        if (fs.existsSync(accountPath)) {
            const stats = fs.statSync(accountPath);
            msg += `‚úÖ ${global.config.account_file}: T·ªìn t·∫°i (${Math.round(stats.size / 1024)}KB)\n`;
            
            try {
                const accountData = JSON.parse(fs.readFileSync(accountPath, 'utf8'));
                msg += `   - IMEI: ${accountData.imei ? '‚úÖ' : '‚ùå'}\n`;
                msg += `   - UserAgent: ${accountData.userAgent ? '‚úÖ' : '‚ùå'}\n`;
                msg += `   - Cookie file: ${accountData.cookie || 'cookie.json'}\n`;
            } catch (e) {
                msg += `   - ‚ùå L·ªói ƒë·ªçc file: ${e.message}\n`;
            }
        } else {
            msg += `‚ùå ${global.config.account_file}: Kh√¥ng t·ªìn t·∫°i\n`;
        }
        
        // Ki·ªÉm tra file cookie
        if (fs.existsSync(cookiePath)) {
            const stats = fs.statSync(cookiePath);
            msg += `‚úÖ cookie.json: T·ªìn t·∫°i (${Math.round(stats.size / 1024)}KB)\n`;
            
            try {
                const cookieData = JSON.parse(fs.readFileSync(cookiePath, 'utf8'));
                const cookieCount = Array.isArray(cookieData) ? cookieData.length : Object.keys(cookieData).length;
                msg += `   - S·ªë l∆∞·ª£ng cookie: ${cookieCount}\n`;
            } catch (e) {
                msg += `   - ‚ùå L·ªói ƒë·ªçc cookie: ${e.message}\n`;
            }
        } else {
            msg += "‚ùå cookie.json: Kh√¥ng t·ªìn t·∫°i\n";
        }
        
        // Ki·ªÉm tra file QR
        if (fs.existsSync(qrPath)) {
            const stats = fs.statSync(qrPath);
            msg += `‚úÖ ${global.config.qrcode_path}: T·ªìn t·∫°i (${Math.round(stats.size / 1024)}KB)\n`;
        } else {
            msg += `‚ö™ ${global.config.qrcode_path}: Kh√¥ng t·ªìn t·∫°i\n`;
        }
        
        msg += "\nüí° **G·ª¢I √ù**:\n";
        if (!validation.valid) {
            msg += "- S·ª≠ d·ª•ng l·ªánh `/logout` ƒë·ªÉ x√≥a file c≈©\n";
            msg += "- Kh·ªüi ƒë·ªông l·∫°i bot ƒë·ªÉ login l·∫°i\n";
        } else {
            msg += "- T·∫•t c·∫£ file authentication ƒë·ªÅu h·ª£p l·ªá\n";
        }

        await api.sendMessage({
            msg: msg,
            ttl: 60000  // T·ª± x√≥a sau 60 gi√¢y
        }, threadId, type);

    } catch (error) {
        await api.sendMessage({
            msg: `‚ùå L·ªói khi ki·ªÉm tra auth status: ${error.message}`,
            ttl: 30000
        }, threadId, type);
    }
};
